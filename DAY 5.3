Undersand about Gsapstagger and GsapScrollTrigger

5-> GsapStagger
GSAP stagger is a feature that allows you to apply animations with a staggered delay to a group of elements.
By using the stagger feature in GSAP, you can specify the amount of time to stagger the animations between each element, as well as 
customize the easing and duration of each individual animation. This enables you to create dynamic and visually appealing effects, such as staggered fades,
rotations, movements, and more.

export default GsapTimeline;

import {useGSAP} from "@gsap/react";
import gsap from "gsap";

const GsapStagger = () => {
  // TODO: Implement the gsap.stagger() method
   useGSAP(() => {  // stagger is properties to apply any animation.
      gsap.to('.stagger-box',{
        y:250,
        rotation: 360,
        borderRadius: '100%',
        repeat: -1,
        yoyo: true,
       // duration: 2,
        // they all are perfoming animation together but what if we want to perform one by one so we use stagger properties..
        stagger: 0.5,
        // passing stagger as a object
        stagger:{
          amount: 1.5, // animation difference time 
          grid: [2,1],  // it select number  of coloumns and row in a grid
          axis: 'y', // start your animation 
          ease: 'circ.inOut',
          from: 'center',  // staring position of animation 
        }
      })
   },[])

  return (
    <main>
      <h1>GsapStagger</h1>

      <div className="mt-20">
        <div className="flex gap-5">
          <div className="w-20 h-20 bg-indigo-200 rounded-lg stagger-box" />
          <div className="w-20 h-20 bg-indigo-300 rounded-lg stagger-box" />
          <div className="w-20 h-20 bg-indigo-400 rounded-lg stagger-box" />
          <div className="w-20 h-20 bg-indigo-500 rounded-lg stagger-box" />
          <div className="w-20 h-20 bg-indigo-600 rounded-lg stagger-box" />
          <div className="w-20 h-20 bg-indigo-700 rounded-lg stagger-box" />
          <div className="w-20 h-20 bg-indigo-800 rounded-lg stagger-box" />
        </div>
      </div>
    </main>
  );
};

export default GsapStagger;

-----------------------------------------
6-> GsapScrollTrigger
Gsap Scroll Trigger is a plugin that allows you to create animations that are triggered by the scroll position of the page.
With ScrollTrigger, you can define various actions to be triggered at specific scroll points, such as starting or ending an animation,
scrubbing through animations as the user scrolls, pinning elements to the screen, and more.
// gsap scroll trigger is a plugin ...
// it is not realted to gsap.
import {ScrollTrigger} from "gsap/all";
import { useRef } from "react";
import {useGSAP} from "@gsap/react";
import gsap from "gsap";

gsap.registerPlugin(ScrollTrigger)

const GsapScrollTrigger = () => {
const scrollRef = useRef();
  // TODO: Implement the gsap scroll trigger
 
useGSAP (() => {
   const boxes = gsap.utils.toArray(scrollRef.current.children);
   
   boxes.forEach((box) => {
    gsap.to(box,{
      x:150 * (boxes.indexOf(box) + 5),
      roatation: 360,
      borderRadius: '100%',
      scale: 1.5,
      scrollTrigger:{
        trigger: box,
        start: 'bottom bottom',
        end: 'top 10%',
        scrub: true, // use for smooth animation

      }
    })
   })
  }, {scope: scrollRef})

  return (
    <main>
          

        <div className="w-full h-[70vh] flex justify-center items-center flex-col">
        <p className="text-center text-gray-500">
          Scroll down to see the animation
        </p>

        <svg
          className="animate-bounce mt-5"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="blue"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        >
          <path d="M12 19V5" />
          <path d="M5 12l7 7 7-7" />
        </svg>
      </div>

      <div className="mt-20 w-full h-screen" ref = {scrollRef}>
        {/* here we have two thing scroll-pink and scroll-orange so we are wrapping both of them in single by using ref */}
        
        <div
          id="scroll-pink"
          className="scroll-box w-20 h-20 rounded-lg bg-pink-500"
        />
        <div
          id="scroll-orange"
          className="scroll-box w-20 h-20 rounded-lg bg-orange-500"
        />
      </div>
    </main>
  );
};

export default GsapScrollTrigger;
---------------------------------------------
7 -> GsapText
We can use same method like gsap.to(), gsap.from(), gsap.fromTo() and gsap.timeline() to animate text.
Using these methods we can achieve various text animations and effects like fade in, fade out, slide in, slide out, and many more.
For more advanced text animations and effects, you can explore the GSAP TextPlugin or other third-party libraries that specialize in text animations.

import {useGSAP} from "@gsap/react";
import gsap from "gsap";

const GsapText = () => {
  // TODO: Implement gsap text animation
     useGSAP(() => {  
         gsap.to('#text', { // animation of text heading
          ease: 'power1.inOut',
          opacity:1,
          y:0,
         })

         // animating para 
         gsap.fromTo('.para',{
           opacity: 0,
           y:20,
         }, {
              opacity:1,
              y:0,
              delay:1,
              stagger:0.1,
         })
     },[])
  return (
    <main>
      <h1 id="text" className="opacity-0 translate-y-10">
        GsapText
      </h1>

      <p className="mt-5 text-gray-500 para">
        We can use same method like <code>gsap.to()</code>,{" "}
        <code>gsap.from()</code>, <code>gsap.fromTo()</code> and{" "}
        <code>gsap.timeline()</code> to animate text.
      </p>

      <p className="mt-5 text-gray-500 para">
        Using these methods we can achieve various text animations and effects
        like fade in, fade out, slide in, slide out, and many more.
      </p>

      <p className="mt-5 text-gray-500 para">
        For more advanced text animations and effects, you can explore the GSAP
        TextPlugin or other third-party libraries that specialize in text
        animations.
      </p>

      <p className="mt-5 text-gray-500 para">
        Read more about the{" "}
        <a
          href="https://greensock.com/docs/v3/Plugins/TextPlugin"
          target="_blank"
          rel="noreferrer noopener nofollow"
        >
          TextPlugin
        </a>{" "}
        plugin.
      </p>
    </main>
  );
};

export default GsapText;

-------------------------------------------------------------------
